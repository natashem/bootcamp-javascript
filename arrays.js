// 1. –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª. –ü—Ä–µ–æ–±—Ä–∞–∑—É–π –º–∞—Å—Å–∏–≤ —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–∞–º –±—ã–ª–∏ –∫–≤–∞–¥—Ä–∞—Ç—ã —á–∏—Å–µ–ª. 
// –ü—Ä–∏–º–µ—Ä: [2, 3] -> [4, 9];

let squaresArray = [2, 3];
squaresArray = squaresArray.map(num => num * num);
console.log(squaresArray);

// 2. –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ c –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–º–∏—Å—è —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏. 
// –û—Ç—Ñ–∏–ª—å—Ç—Ä—É–π –º–∞—Å—Å–∏–≤ —Ç–∞–∫, —á—Ç–æ–±—ã —Ç–∞–º –æ—Å—Ç–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã. 
// –ü—Ä–∏–º–µ—Ä: [1, 2, 2, 3, 4, 5, 5, 5, 6] -> [1, 2, 3, 4, 5, 6];

let notFilteredArray = [1, 2, 2, 3, 4, 5, 5, 5, 6];
let filteredArray = notFilteredArray.filter((num, index) => notFilteredArray.indexOf(num) === index);

console.log(filteredArray); 

// 3. –ï—Å—Ç—å –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª, –ø–æ—Å—á–∏—Ç–∞–π —Å—É–º–º—É –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. 
// –ü—Ä–∏–º–µ—Ä: [1, 2, 3] -> 6. –ü–æ–¥—Å–∫–∞–∑–∫–∞: –∏—Å–ø–æ–ª—å–∑—É–π reduce;

const arrayForSum = [1, 2, 3];
const sum = arrayForSum.reduce((total, num) => total + num, 0);

console.log(sum);

// 4. –ù–∞–ø–∏—à–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Ä–∞–∑–≤–µ—Ä–Ω–µ—Ç –º–∞—Å—Å–∏–≤, —Ç–æ –µ—Å—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –±—É–¥—É—Ç –≤ –æ–±—Ä–∞—Ç–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ. 
// –ù–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å reverse()!

const directArray = [1, 2, 3, 5, 5, 1];
let reversedArray = [];

directArray.forEach(num => reversedArray.unshift(num));

console.log('–ò—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤: ', directArray);
console.log('–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤: ', reversedArray);

// 5. –°–æ–∑–¥–∞–π –¥–≤–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö - –¥–≤–µ —Å—Ç—Ä–æ–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º let –∏ const. 
// –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è –≤—Å–µ—Ö —ç—Ç–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö. 
// –°–æ–∑–¥–∞–π—Ç–µ –¥–≤–∞ –º–∞—Å—Å–∏–≤–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º let –∏ const. 
// –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –º–∞—Å—Å–∏–≤—ã (–¥–æ–±–∞–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã) –∏ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∞–º–∏ –º–∞—Å—Å–∏–≤—ã. 
// –ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –æ–±—ä—è—Å–Ω–∏ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏ (–¥–∞, –æ–ø—è—Ç—åüôÇ), —á—Ç–æ –∏ –ø–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–æ–∏–∑–æ—à–ª–æ.

let letString = "Let String";
const constString = "Const String";

letString = "Edited Let String";
//constString = "Edited Const String"; 

/*
constString - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ const, –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –Ω–µ–ª—å–∑—è
*/

let letArray = [1, 2, 3];
const constArray = ['a', 'b', 'c'];

letArray.pop();
letArray.push(4);

constArray.pop();
constArray.push('d');

console.log(letArray);
console.log(constArray);

letArray = [5, 6];
// constArray = ['x', 'z'];

/*
constArray - –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–¥–∞–Ω–∞ —á–µ—Ä–µ–∑ const, –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è—Ç—å –Ω–µ–ª—å–∑—è, –Ω–æ –∏–∑–º–µ–Ω—è—Ç—å —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥—ã –º–æ–∂–Ω–æ üôÇ
*/